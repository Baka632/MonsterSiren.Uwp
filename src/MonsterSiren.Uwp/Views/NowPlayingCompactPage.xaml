<Page
    x:Class="MonsterSiren.Uwp.Views.NowPlayingCompactPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Win17763="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 7)"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:MonsterSiren.Uwp.Helpers"
    xmlns:local="using:MonsterSiren.Uwp.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewmodels="using:MonsterSiren.Uwp.ViewModels"
    d:DataContext="{d:DesignInstance Type=viewmodels:NowPlayingCompactViewModel}"
    RequestedTheme="Dark"
    mc:Ignorable="d">

    <Grid>
        <TextBlock
            x:Uid="NoMusicTextBlock"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Visibility="{x:Bind helpers:XamlHelper.ReverseVisibility(ViewModel.IsDisplayContent), Mode=OneWay}" />

        <Grid>
            <Grid.Resources>
                <Style TargetType="Button">
                    <Setter Property="Height" Value="35" />
                    <Setter Property="Width" Value="35" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Margin" Value="5,0,5,0" />
                    <Setter Property="Padding" Value="0" />
                </Style>
            </Grid.Resources>

            <Image
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Opacity="0.1"
                Source="{x:Bind ViewModel.CurrentMediaCover, Mode=OneWay}"
                Stretch="UniformToFill" />
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <StackPanel
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Orientation="Horizontal"
                    Visibility="{x:Bind helpers:XamlHelper.ToVisibility(ViewModel.IsDisplayContent), Mode=OneWay}">
                    <Button Win17763:CornerRadius="4" Command="{x:Bind ViewModel.PreviousMusicCommand}">
                        <FontIcon Glyph="&#xE100;" />
                    </Button>
                    <Button
                        Width="51"
                        Height="51"
                        Win17763:CornerRadius="4"
                        BorderThickness="2"
                        Command="{x:Bind ViewModel.PlayOrPauseMusicCommand}">
                        <FontIcon
                            FontFamily="Segoe MDL2 Assets"
                            FontSize="25"
                            Glyph="{x:Bind ViewModel.PlayIconGlyph, Mode=OneWay}" />
                    </Button>
                    <Button Win17763:CornerRadius="4" Command="{x:Bind ViewModel.NextMusicCommand}">
                        <FontIcon Glyph="&#xE101;" />
                    </Button>
                </StackPanel>

                <StackPanel
                    x:Name="MusicInfoStackPanel"
                    Margin="0,0,0,50"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Bottom">
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="18"
                        Text="{x:Bind ViewModel.CurrentMusicProperties.Title, Mode=OneWay}"
                        TextTrimming="WordEllipsis" />
                    <TextBlock
                        Margin="0,0,0,5"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="16"
                        FontWeight="Bold"
                        Text="{x:Bind ViewModel.CurrentMusicProperties.AlbumArtist, Mode=OneWay}"
                        TextTrimming="WordEllipsis" />
                </StackPanel>
            </Grid>
        </Grid>

        <Button
            Width="35"
            Height="35"
            Margin="0,0,5,10"
            Padding="0"
            HorizontalAlignment="Right"
            VerticalAlignment="Bottom"
            Background="Transparent"
            Command="{x:Bind ViewModel.BackCommand}"
            Content="&#xE158;"
            FontFamily="Segoe MDL2 Assets"
            FontSize="16" />
        <ProgressBar
            Foreground="White"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Bottom"
            Maximum="{x:Bind ViewModel.MusicDuration.TotalSeconds, Mode=OneWay}"
            Visibility="{x:Bind helpers:XamlHelper.ToVisibility(ViewModel.IsDisplayContent), Mode=OneWay}"
            Value="{x:Bind ViewModel.MusicPosition.TotalSeconds, Mode=OneWay}" />

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <Storyboard>
                        <DoubleAnimation
                            Storyboard.TargetName="MusicInfoStackPanel"
                            Storyboard.TargetProperty="Opacity"
                            From="1"
                            To="0"
                            Duration="0:0:0.1" />
                    </Storyboard>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="300" />
                    </VisualState.StateTriggers>
                    <Storyboard>
                        <DoubleAnimation
                            Storyboard.TargetName="MusicInfoStackPanel"
                            Storyboard.TargetProperty="Opacity"
                            From="0"
                            To="1"
                            Duration="0:0:0.1" />
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
