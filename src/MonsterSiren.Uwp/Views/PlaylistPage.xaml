<Page
    x:Class="MonsterSiren.Uwp.Views.PlaylistPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:app="using:MonsterSiren.Uwp"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:Baka632.Library.Uwp.CSharp.Helpers"
    xmlns:local="using:MonsterSiren.Uwp.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="using:MonsterSiren.Uwp.Models"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:services="using:MonsterSiren.Uwp.Services"
    xmlns:viewmodels="using:MonsterSiren.Uwp.ViewModels"
    x:Name="Self"
    d:DataContext="{d:DesignInstance Type=viewmodels:PlaylistViewModel}"
    mc:Ignorable="d">
    <Page.Resources>
        <MenuFlyout
            x:Name="PlaylistContextFlyout"
            x:FieldModifier="Internal"
            Opening="OnPlaylistContextFlyoutOpening">
            <MenuFlyoutItem
                x:Uid="PlayCommandButton"
                Command="{x:Bind ViewModel.PlayPlaylistCommand}"
                CommandParameter="{x:Bind ViewModel.SelectedPlaylist, Mode=OneWay}"
                Icon="Play" />
            <MenuFlyoutSubItem Tag="Placeholder_For_AddTo" />
            <MenuFlyoutItem
                x:Uid="ModifyCommandButton"
                Command="{x:Bind ViewModel.ModifyPlaylistCommand}"
                CommandParameter="{x:Bind ViewModel.SelectedPlaylist, Mode=OneWay}"
                Icon="Edit" />
            <MenuFlyoutItem
                x:Uid="DeleteCommandButton"
                Command="{x:Bind ViewModel.RemovePlaylistCommand}"
                CommandParameter="{x:Bind ViewModel.SelectedPlaylist, Mode=OneWay}"
                Icon="Delete" />
            <MenuFlyoutSeparator />
            <MenuFlyoutItem x:Uid="SelectForSongList" Command="{x:Bind ViewModel.StartMultipleSelectionCommand}">
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE762;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <MenuFlyout
            x:Name="PlaylistSelectionFlyout"
            x:FieldModifier="Internal"
            Opening="OnPlaylistSelectionFlyoutOpening">
            <MenuFlyoutItem
                x:Uid="PlayCommandButton"
                Command="{x:Bind ViewModel.PlayPlaylistForSelectedItemCommand}"
                Icon="Play" />
            <MenuFlyoutSubItem Tag="Placeholder_For_AddTo" />
            <MenuFlyoutItem
                x:Uid="DeleteCommandButton"
                Command="{x:Bind ViewModel.RemoveSelectedPlaylistCommand}"
                Icon="Delete" />
            <MenuFlyoutSeparator />
            <MenuFlyoutItem
                x:Uid="SelectAllForSongList"
                Command="{x:Bind ViewModel.SelectAllSongListCommand}"
                Icon="SelectAll" />
            <MenuFlyoutItem
                x:Uid="DeselectAllForSongList"
                Command="{x:Bind ViewModel.DeselectAllSongListCommand}"
                Icon="ClearSelection" />
            <MenuFlyoutItem
                x:Uid="DeselectForSongList"
                Command="{x:Bind ViewModel.StopMultipleSelectionCommand}"
                Icon="Cancel" />
        </MenuFlyout>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <StackPanel
            Grid.Row="0"
            Margin="0,0,0,10"
            Orientation="Horizontal">
            <FontIcon
                Margin="0,0,10,0"
                HorizontalAlignment="Center"
                FontSize="40"
                Glyph="&#xE14C;" />
            <TextBlock
                x:Uid="PlaylistTextBlock"
                Margin="0,0,5,0"
                HorizontalAlignment="Center"
                FontSize="30" />
        </StackPanel>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <StackPanel
                Grid.Row="0"
                Margin="0,0,0,5"
                Orientation="Horizontal">
                <Button
                    AccessKey="0"
                    Background="Transparent"
                    Command="{x:Bind ViewModel.CreateNewPlaylistCommand}">
                    <StackPanel Orientation="Horizontal">
                        <FontIcon
                            Margin="0,0,5,0"
                            HorizontalAlignment="Center"
                            Glyph="&#xE109;" />
                        <TextBlock x:Uid="PlaylistPage_NewPlaylist" HorizontalAlignment="Center" />
                    </StackPanel>
                </Button>
            </StackPanel>

            <GridView
                x:Name="PlaylistGridView"
                Grid.Row="1"
                animations:Connected.ListItemElementName="PlaylistCoverGrid"
                animations:Connected.ListItemKey="PlaylistItemToDetailAnimationKey"
                animations:ReorderGridAnimation.Duration="500"
                x:FieldModifier="Internal"
                CanDragItems="True"
                DragItemsStarting="OnPlaylistItemsDragStarting"
                IsItemClickEnabled="True"
                ItemClick="OnPlaylistItemClick"
                ItemsSource="{x:Bind services:PlaylistService.TotalPlaylists}"
                SelectionMode="None"
                Visibility="{x:Bind helpers:XamlHelper.ReverseVisibility(IsTotalPlaylistEmpty), Mode=OneWay}">
                <GridView.Resources>
                    <SolidColorBrush x:Key="SystemControlTransparentRevealBackgroundBrush" Color="Transparent" />
                    <SolidColorBrush x:Key="SystemControlTransparentRevealBorderBrush" Color="Transparent" />
                    <SolidColorBrush x:Key="GridViewItemRevealBorderBrush" Color="Transparent" />
                    <Thickness x:Key="ListViewItemRevealBorderThemeThickness">0</Thickness>
                    <Thickness x:Key="GridViewItemRevealBorderThemeThickness">0</Thickness>
                    <SolidColorBrush x:Key="ListViewItemRevealBackgroundSelectedPressed" Color="Transparent" />
                    <SolidColorBrush x:Key="ListViewItemRevealPlaceholderBackground" Color="Transparent" />
                    <SolidColorBrush x:Key="GridViewItemRevealBackground" Color="Transparent" />
                    <SolidColorBrush x:Key="GridViewItemRevealBackgroundPointerOver" Color="Transparent" />
                    <SolidColorBrush x:Key="GridViewItemRevealBackgroundPressed" Color="Transparent" />
                    <SolidColorBrush x:Key="GridViewItemRevealBackgroundSelected" Color="Transparent" />
                    <SolidColorBrush x:Key="GridViewItemRevealBackgroundSelectedPointerOver" Color="Transparent" />
                    <SolidColorBrush x:Key="GridViewItemRevealBackgroundSelectedPressed" Color="Transparent" />
                    <SolidColorBrush x:Key="GridViewItemRevealPlaceholderBackground" Color="Transparent" />
                </GridView.Resources>

                <GridView.ItemTemplate>
                    <DataTemplate x:DataType="models:Playlist">
                        <Grid
                            Padding="5"
                            Background="Transparent"
                            ContextFlyout="{Binding ElementName=Self, Path=ViewModel.SelectedPlaylistContextFlyout, Mode=OneWay}"
                            DataContext="{x:Bind}"
                            RightTapped="OnGridViewItemRightTapped">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <Grid
                                x:Name="PlaylistCoverGrid"
                                Grid.Row="0"
                                Width="170"
                                Height="170">
                                <Image
                                    Source="{x:Bind PlaylistCoverImage, Mode=OneWay}"
                                    Stretch="UniformToFill"
                                    Visibility="{x:Bind helpers:XamlHelper.IsNullReverseVisibility(PlaylistCoverImage), Mode=OneWay}" />
                                <Grid Background="#4b4b4b" Visibility="{x:Bind helpers:XamlHelper.IsNullToVisibility(PlaylistCoverImage), Mode=OneWay}">
                                    <FontIcon
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        FontSize="50"
                                        Foreground="White"
                                        Glyph="&#xE955;" />
                                </Grid>
                            </Grid>

                            <TextBlock
                                Grid.Row="1"
                                Margin="0,5,0,0"
                                HorizontalAlignment="Left"
                                FontWeight="SemiBold"
                                Text="{x:Bind Title, Mode=OneWay}" />
                            <TextBlock
                                Grid.Row="2"
                                Margin="0,0,0,5"
                                HorizontalAlignment="Left"
                                Foreground="#8f8f8f"
                                Text="{x:Bind x:String.Format(app:CommonValues.SongCountFormat, SongCount), Mode=OneWay}"
                                TextTrimming="CharacterEllipsis" />
                        </Grid>
                    </DataTemplate>
                </GridView.ItemTemplate>
            </GridView>

            <StackPanel
                Grid.Row="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Visibility="{x:Bind helpers:XamlHelper.ToVisibility(IsTotalPlaylistEmpty), Mode=OneWay}">
                <FontIcon FontSize="60" Glyph="&#xE955;" />
                <TextBlock x:Uid="NoPlaylistTextBlock" FontSize="20" />
            </StackPanel>
        </Grid>
    </Grid>
</Page>
