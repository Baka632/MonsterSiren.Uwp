<Page
    x:Class="MonsterSiren.Uwp.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:NotWin16299="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract, 5)"
    xmlns:Win16299="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 5)"
    xmlns:Win17763="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 7)"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:MonsterSiren.Uwp.Helpers"
    xmlns:local="using:MonsterSiren.Uwp"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:triggers="using:WindowsStateTriggers"
    xmlns:viewmodels="using:MonsterSiren.Uwp.ViewModels"
    d:DataContext="{d:DesignInstance Type=viewmodels:MainViewModel}"
    Loaded="OnMainPageLoaded"
    mc:Ignorable="d">
    <Page.Resources>
        <!--#region TitleBarStoryboard-->
        <Storyboard x:Name="TitleBarTextBlockForward">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TitleBarTextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                <SplineDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="45">
                    <SplineDoubleKeyFrame.KeySpline>
                        <KeySpline ControlPoint1="0,1" ControlPoint2="0,1" />
                    </SplineDoubleKeyFrame.KeySpline>
                </SplineDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Name="TitleBarTextBlockBack">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TitleBarTextBlock" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                <SplineDoubleKeyFrame KeyTime="0:0:0" Value="45" />
                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <SplineDoubleKeyFrame.KeySpline>
                        <KeySpline ControlPoint1="0,1" ControlPoint2="1,1" />
                    </SplineDoubleKeyFrame.KeySpline>
                </SplineDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <!--#endregion-->
        <Storyboard x:Name="TitleBarShow">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TitleBar" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                <SplineDoubleKeyFrame KeyTime="0:0:0" Value="-10" />
                <SplineDoubleKeyFrame KeyTime="0:0:5" Value="0">
                    <SplineDoubleKeyFrame.KeySpline>
                        <KeySpline ControlPoint1="0,1" ControlPoint2="0,1" />
                    </SplineDoubleKeyFrame.KeySpline>
                </SplineDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="100" />
        </Grid.RowDefinitions>

        <Grid
            x:Name="TitleBar"
            Grid.Row="0"
            Margin="11,0,0,10"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top">
            <Grid.RenderTransform>
                <TranslateTransform />
            </Grid.RenderTransform>

            <TextBlock
                x:Name="TitleBarTextBlock"
                Margin="0,8,0,0"
                VerticalAlignment="Center"
                Style="{StaticResource CaptionTextBlockStyle}"
                Text="{x:Bind local:App.AppDisplayName}">
                <TextBlock.RenderTransform>
                    <TranslateTransform />
                </TextBlock.RenderTransform>
            </TextBlock>
        </Grid>

        <muxc:NavigationView
            x:Name="NavigationView"
            Grid.Row="1"
            IsBackButtonVisible="Collapsed"
            IsBackEnabled="False"
            ItemInvoked="OnNavigationViewItemInvoked">
            <muxc:NavigationView.Resources>
                <Thickness x:Key="NavigationViewItemInnerHeaderMargin">0,0,0,0</Thickness>
                <Thickness x:Key="NavigationViewMinimalHeaderMargin">0,0,0,0</Thickness>
                <Thickness x:Key="NavigationViewHeaderMargin">0,0,0,0</Thickness>
            </muxc:NavigationView.Resources>
            <muxc:NavigationView.AutoSuggestBox>
                <AutoSuggestBox
                    x:Name="SearchBox"
                    x:Uid="NavigationViewSearchBox"
                    QueryIcon="Find" />
            </muxc:NavigationView.AutoSuggestBox>

            <muxc:NavigationView.MenuItems>
                <muxc:NavigationViewItem
                    x:Name="MusicPageItem"
                    x:Uid="MusicNavViewItem"
                    Tag="MusicPage">
                    <muxc:NavigationViewItem.Icon>
                        <SymbolIcon Symbol="Audio" />
                    </muxc:NavigationViewItem.Icon>
                </muxc:NavigationViewItem>

                <muxc:NavigationViewItem
                    x:Name="NowPlayingPageItem"
                    x:Uid="NowPlayingNavViewItem"
                    Tag="NowPlayingPage">
                    <muxc:NavigationViewItem.Icon>
                        <SymbolIcon Symbol="MusicInfo" />
                    </muxc:NavigationViewItem.Icon>
                </muxc:NavigationViewItem>

                <muxc:NavigationViewItemSeparator />

                <muxc:NavigationViewItem
                    x:Name="NewsPageItem"
                    x:Uid="NewsNavViewItem"
                    Tag="NewsPage">
                    <muxc:NavigationViewItem.Icon>
                        <FontIcon Glyph="&#xE90A;" />
                    </muxc:NavigationViewItem.Icon>
                </muxc:NavigationViewItem>
            </muxc:NavigationView.MenuItems>

            <muxc:NavigationView.PaneFooter>
                <muxc:NavigationViewItemSeparator />
            </muxc:NavigationView.PaneFooter>

            <Grid Margin="20,20,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <muxc:InfoBar
                    Title="{x:Bind ViewModel.InfoBarTitle, Mode=OneWay}"
                    Grid.Row="0"
                    Margin="0,0,0,10"
                    IsOpen="{x:Bind ViewModel.InfoBarOpen, Mode=OneWay}"
                    Message="{x:Bind ViewModel.InfoBarMessage, Mode=OneWay}"
                    Severity="{x:Bind ViewModel.InfoBarSeverity, Mode=OneWay}" />
                <Frame
                    x:Name="ContentFrame"
                    Grid.Row="1"
                    Navigated="OnContentFrameNavigated" />
            </Grid>
        </muxc:NavigationView>

        <Grid
            Grid.Row="2"
            HorizontalAlignment="Stretch"
            RequestedTheme="Dark">
            <Win16299:Grid.Background>
                <Win16299:AcrylicBrush
                    AlwaysUseFallback="False"
                    BackgroundSource="Backdrop"
                    TintColor="{x:Bind ViewModel.MusicThemeColor, Mode=OneWay}"
                    TintOpacity="0.5" />
            </Win16299:Grid.Background>
            <NotWin16299:Grid.Background>
                <NotWin16299:SolidColorBrush Color="{x:Bind ViewModel.MusicThemeColor, Mode=OneWay}" />
            </NotWin16299:Grid.Background>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <muxc:ProgressRing
                Grid.Row="0"
                Grid.RowSpan="2"
                Grid.Column="0"
                Margin="30,0,10,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                IsActive="{x:Bind ViewModel.IsLoadingMedia, Mode=OneWay}" />
            <Button
                x:Name="MediaInfoButton"
                Grid.Row="0"
                Grid.RowSpan="2"
                Grid.Column="0"
                Width="Auto"
                MaxWidth="300"
                Padding="0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Background="Transparent"
                BorderThickness="0"
                Click="OnMediaInfoButtonClick"
                Style="{x:Null}"
                Visibility="{x:Bind helpers:XamlHelper.ToVisibility(ViewModel.IsMediaInfoVisible), Mode=OneWay}">
                <Grid Margin="0,0,10,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Grid Margin="0,0,10,0" Visibility="{x:Bind helpers:XamlHelper.ReverseVisibility(ViewModel.IsLoadingMedia), Mode=OneWay}">
                        <Image
                            x:Name="MediaCoverImage"
                            Grid.Column="0"
                            Source="{x:Bind ViewModel.CurrentMediaCover, Mode=OneWay}" />
                    </Grid>

                    <Grid
                        Grid.Column="1"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Visibility="{x:Bind helpers:XamlHelper.ReverseVisibility(ViewModel.IsLoadingMedia), Mode=OneWay}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <TextBlock
                            Grid.Row="0"
                            FontSize="18"
                            Text="{x:Bind ViewModel.CurrentMusicProperties.Title, Mode=OneWay}" />
                        <TextBlock
                            Grid.Row="1"
                            Margin="0,0,0,5"
                            FontSize="16"
                            FontWeight="Bold"
                            Text="{x:Bind ViewModel.CurrentMusicProperties.AlbumArtist, Mode=OneWay}" />
                    </Grid>
                </Grid>
            </Button>

            <StackPanel
                x:Name="MediaControlsStackPanel"
                Grid.Row="0"
                Grid.Column="1"
                Margin="0,10,0,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Height" Value="35" />
                        <Setter Property="Width" Value="35" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Margin" Value="5,0,5,0" />
                        <Setter Property="Padding" Value="0" />
                    </Style>
                    <Style BasedOn="{StaticResource MediaControlToggleButton}" TargetType="ToggleButton">
                        <Setter Property="Height" Value="35" />
                        <Setter Property="Width" Value="35" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Margin" Value="5,0,5,0" />
                        <Setter Property="Padding" Value="0" />
                    </Style>
                </StackPanel.Resources>

                <ToggleButton
                    x:Name="IsShuffleToggleButton"
                    Win17763:CornerRadius="4"
                    IsChecked="{x:Bind ViewModel.IsShuffle, Mode=TwoWay}"
                    IsThreeState="False"
                    ToolTipService.ToolTip="{x:Bind ViewModel.ShuffleStateDescription, Mode=OneWay}">
                    <FontIcon Glyph="&#xE14B;" />
                </ToggleButton>
                <Button
                    Win17763:CornerRadius="4"
                    Command="{x:Bind ViewModel.PreviousMusicCommand}"
                    IsEnabled="{x:Bind ViewModel.EnableMediaControl, Mode=OneWay}">
                    <FontIcon Glyph="&#xE100;" />
                </Button>
                <Button
                    Width="51"
                    Height="51"
                    Win17763:CornerRadius="4"
                    BorderThickness="2"
                    Command="{x:Bind ViewModel.PlayOrPauseMusicCommand}"
                    IsEnabled="{x:Bind ViewModel.EnableMediaControl, Mode=OneWay}">
                    <FontIcon
                        FontFamily="Segoe MDL2 Assets"
                        FontSize="25"
                        Glyph="{x:Bind ViewModel.PlayIconGlyph, Mode=OneWay}" />
                </Button>
                <Button
                    Win17763:CornerRadius="4"
                    Command="{x:Bind ViewModel.NextMusicCommand}"
                    IsEnabled="{x:Bind ViewModel.EnableMediaControl, Mode=OneWay}">
                    <FontIcon Glyph="&#xE101;" />
                </Button>
                <ToggleButton
                    x:Name="IsRepeatToggleButton"
                    Win17763:CornerRadius="4"
                    IsChecked="{x:Bind ViewModel.IsRepeat, Mode=TwoWay}"
                    IsThreeState="True"
                    ToolTipService.ToolTip="{x:Bind ViewModel.RepeatStateDescription, Mode=OneWay}">
                    <FontIcon Glyph="{x:Bind ViewModel.RepeatIconGlyph, Mode=OneWay}" />
                </ToggleButton>

                <Button
                    x:Name="NarrowMediaAdditionalControlButton"
                    Width="35"
                    Height="35"
                    Padding="0"
                    Win17763:CornerRadius="4"
                    Visibility="Collapsed">
                    <Button.Flyout>
                        <Flyout>
                            <StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <ToggleButton
                                        Width="35"
                                        Height="35"
                                        Margin="0,0,5,0"
                                        Padding="0"
                                        HorizontalAlignment="Left"
                                        Background="Transparent"
                                        IsChecked="{x:Bind ViewModel.IsMute, Mode=TwoWay}"
                                        IsThreeState="False">
                                        <FontIcon FontSize="16" Glyph="{x:Bind ViewModel.VolumeIconGlyph, Mode=OneWay}" />
                                    </ToggleButton>
                                    <Slider
                                        Width="100"
                                        HorizontalAlignment="Stretch"
                                        Maximum="100"
                                        Value="{x:Bind ViewModel.Volume, Mode=TwoWay}" />
                                </StackPanel>
                                <ToggleButton
                                    Margin="0,5,0,0"
                                    HorizontalAlignment="Stretch"
                                    Win17763:CornerRadius="4"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    IsChecked="{x:Bind ViewModel.IsShuffle, Mode=TwoWay}"
                                    IsThreeState="False"
                                    Style="{StaticResource MediaControlToggleButton}">
                                    <StackPanel Orientation="Horizontal">
                                        <FontIcon Margin="0,0,5,0" Glyph="&#xE14B;" />
                                        <TextBlock Text="{x:Bind ViewModel.ShuffleStateDescription, Mode=OneWay}" />
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton
                                    Margin="0,5,0,5"
                                    HorizontalAlignment="Stretch"
                                    Win17763:CornerRadius="4"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    IsChecked="{x:Bind ViewModel.IsRepeat, Mode=TwoWay}"
                                    IsThreeState="True"
                                    Style="{StaticResource MediaControlToggleButton}">
                                    <StackPanel Orientation="Horizontal">
                                        <FontIcon Margin="0,0,5,0" Glyph="{x:Bind ViewModel.RepeatIconGlyph, Mode=OneWay}" />
                                        <TextBlock Text="{x:Bind ViewModel.RepeatStateDescription, Mode=OneWay}" />
                                    </StackPanel>
                                </ToggleButton>
                                <Button
                                    HorizontalAlignment="Stretch"
                                    Win17763:CornerRadius="4"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    Command="{x:Bind ViewModel.StopMusicCommand}"
                                    IsEnabled="{x:Bind ViewModel.EnableMediaControl, Mode=OneWay}">
                                    <StackPanel Orientation="Horizontal">
                                        <SymbolIcon Margin="0,0,5,0" Symbol="Cancel" />
                                        <TextBlock x:Uid="ClearPlaybackList" />
                                    </StackPanel>
                                </Button>
                            </StackPanel>
                        </Flyout>
                    </Button.Flyout>
                    <SymbolIcon Symbol="More" />
                </Button>
            </StackPanel>
            <Grid
                x:Name="MusicProcessGrid"
                Grid.Row="1"
                Grid.Column="1"
                MaxWidth="420"
                Margin="15,0,15,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Center"
                Visibility="{x:Bind helpers:XamlHelper.ReverseVisibility(ViewModel.IsMusicBufferingOrOpening), Mode=OneWay}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBlock
                    Grid.Column="0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="12"
                    Foreground="White"
                    Text="{x:Bind ViewModel.MusicPosition, Converter={StaticResource TimeSpanToStringConverter}, Mode=OneWay}"
                    Visibility="{x:Bind helpers:XamlHelper.ToVisibility(ViewModel.EnableMediaControl), Mode=OneWay}" />
                <Slider
                    x:Name="MusicProcessSlider"
                    Grid.Column="1"
                    Margin="5,0,5,0"
                    HorizontalAlignment="Stretch"
                    IsEnabled="{x:Bind ViewModel.EnableMediaControl, Mode=OneWay}"
                    IsThumbToolTipEnabled="False"
                    Maximum="{x:Bind ViewModel.MusicDuration.TotalSeconds, Mode=OneWay}"
                    ValueChanged="OnPositionSliderValueChanged"
                    Value="{x:Bind ViewModel.MusicPosition.TotalSeconds, Mode=OneWay}" />
                <TextBlock
                    Grid.Column="2"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="12"
                    Foreground="White"
                    Text="{x:Bind ViewModel.MusicDuration, Converter={StaticResource TimeSpanToStringConverter}, Mode=OneWay}"
                    Visibility="{x:Bind helpers:XamlHelper.ToVisibility(ViewModel.EnableMediaControl), Mode=OneWay}" />
            </Grid>
            <muxc:ProgressBar
                x:Name="MusicStatusProgressBar"
                Grid.Row="1"
                Grid.Column="1"
                MaxWidth="420"
                Margin="15,0,15,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Center"
                IsIndeterminate="True"
                Visibility="{x:Bind helpers:XamlHelper.ToVisibility(ViewModel.IsMusicBufferingOrOpening), Mode=OneWay}" />

            <StackPanel
                x:Name="MediaAdditionalControlStackPanel"
                Grid.Row="0"
                Grid.Column="2"
                Width="Auto"
                Margin="0,6,11,0"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Orientation="Horizontal">
                <StackPanel
                    x:Name="VolumeStackPanel"
                    Margin="0,0,5,0"
                    HorizontalAlignment="Center"
                    Orientation="Horizontal">
                    <ToggleButton
                        Width="35"
                        Height="35"
                        Margin="0,0,5,0"
                        Padding="0"
                        HorizontalAlignment="Center"
                        Background="Transparent"
                        IsChecked="{x:Bind ViewModel.IsMute, Mode=TwoWay}"
                        IsThreeState="False">
                        <FontIcon FontSize="16" Glyph="{x:Bind ViewModel.VolumeIconGlyph, Mode=OneWay}" />
                    </ToggleButton>
                    <Slider
                        Width="100"
                        HorizontalAlignment="Center"
                        Maximum="100"
                        Value="{x:Bind ViewModel.Volume, Mode=TwoWay}" />
                </StackPanel>
                <Button
                    x:Name="CompactModeButton"
                    Width="35"
                    Height="35"
                    Margin="5,0,5,0"
                    Padding="0"
                    HorizontalAlignment="Center"
                    Background="Transparent"
                    Content="&#xE158;"
                    FontFamily="Segoe MDL2 Assets"
                    FontSize="16"
                    Visibility="{x:Bind helpers:XamlHelper.ReverseVisibility(helpers:EnvironmentHelper.IsWindowsMobile)}" />
                <Button
                    Width="35"
                    Height="35"
                    Margin="5,0,5,0"
                    Padding="0"
                    HorizontalAlignment="Center"
                    Background="Transparent"
                    Content="&#xE10C;"
                    FontFamily="Segoe MDL2 Assets"
                    FontSize="16">
                    <Button.Flyout>
                        <Flyout>
                            <StackPanel>
                                <Button
                                    Margin="0,5,0,5"
                                    HorizontalAlignment="Stretch"
                                    Win17763:CornerRadius="4"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    Command="{x:Bind ViewModel.StopMusicCommand}"
                                    IsEnabled="{x:Bind ViewModel.EnableMediaControl, Mode=OneWay}">
                                    <StackPanel Orientation="Horizontal">
                                        <SymbolIcon Margin="0,0,5,0" Symbol="Cancel" />
                                        <TextBlock x:Uid="ClearPlaybackList" />
                                    </StackPanel>
                                </Button>
                            </StackPanel>
                        </Flyout>
                    </Button.Flyout>
                </Button>
            </StackPanel>
        </Grid>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Narrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Win16299:Setter Target="ContentFrame.Margin" Value="-10,20,0,0" />

                        <Setter Target="MediaInfoButton.Padding" Value="5" />
                        <Setter Target="MediaCoverImage.Visibility" Value="Collapsed" />
                        <Setter Target="VolumeStackPanel.Visibility" Value="Collapsed" />
                        <Setter Target="IsShuffleToggleButton.Visibility" Value="Collapsed" />
                        <Setter Target="IsRepeatToggleButton.Visibility" Value="Collapsed" />
                        <Setter Target="MediaAdditionalControlStackPanel.Visibility" Value="Collapsed" />
                        <Setter Target="NarrowMediaAdditionalControlButton.Visibility" Value="Visible" />
                        <Setter Target="MusicProcessGrid.MaxWidth" Value="Infinity" />
                        <Setter Target="MusicStatusProgressBar.MaxWidth" Value="Infinity" />
                        <Setter Target="MediaControlsStackPanel.HorizontalAlignment" Value="Right" />
                        <Setter Target="MediaControlsStackPanel.Margin" Value="0,10,15,0" />

                        <Setter Target="MusicStatusProgressBar.(Grid.ColumnSpan)" Value="3" />
                        <Setter Target="MusicProcessGrid.(Grid.ColumnSpan)" Value="3" />
                        <Setter Target="MediaControlsStackPanel.(Grid.ColumnSpan)" Value="2" />

                        <Setter Target="MusicProcessGrid.(Grid.Column)" Value="0" />
                        <Setter Target="MusicStatusProgressBar.(Grid.Column)" Value="0" />
                        <Setter Target="MediaInfoButton.(Grid.RowSpan)" Value="0" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="MainPageWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="641" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ContentFrame.Margin" Value="0,0,0,0" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="MusicControlsWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="750" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MediaInfoButton.Padding" Value="0" />
                        <Setter Target="MediaCoverImage.Visibility" Value="Visible" />
                        <Setter Target="VolumeStackPanel.Visibility" Value="Visible" />
                        <Setter Target="IsShuffleToggleButton.Visibility" Value="Visible" />
                        <Setter Target="IsRepeatToggleButton.Visibility" Value="Visible" />
                        <Setter Target="MediaAdditionalControlStackPanel.Visibility" Value="Visible" />
                        <Setter Target="NarrowMediaAdditionalControlButton.Visibility" Value="Collapsed" />
                        <Setter Target="MusicProcessGrid.MaxWidth" Value="420" />
                        <Setter Target="MusicStatusProgressBar.MaxWidth" Value="420" />
                        <Setter Target="MediaControlsStackPanel.HorizontalAlignment" Value="Center" />
                        <Setter Target="MediaControlsStackPanel.Margin" Value="0,10,0,0" />

                        <Setter Target="MusicProcessGrid.(Grid.ColumnSpan)" Value="1" />
                        <Setter Target="MusicStatusProgressBar.(Grid.ColumnSpan)" Value="1" />
                        <Setter Target="MediaControlsStackPanel.(Grid.ColumnSpan)" Value="1" />

                        <Setter Target="MusicProcessGrid.(Grid.Column)" Value="1" />
                        <Setter Target="MusicStatusProgressBar.(Grid.Column)" Value="1" />
                        <Setter Target="MediaInfoButton.(Grid.RowSpan)" Value="2" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
