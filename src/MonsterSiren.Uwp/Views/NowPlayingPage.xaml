<Page
    x:Class="MonsterSiren.Uwp.Views.NowPlayingPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Win16299="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 5)"
    xmlns:controls="using:MonsterSiren.Uwp.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:Baka632.Library.Uwp.CSharp.Helpers"
    xmlns:local="using:MonsterSiren.Uwp.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:media="using:Microsoft.Toolkit.Uwp.UI.Media"
    xmlns:msrControls="using:MonsterSiren.Uwp.Controls"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:playback="using:Windows.Media.Playback"
    xmlns:services="using:MonsterSiren.Uwp.Services"
    xmlns:viewmodels="using:MonsterSiren.Uwp.ViewModels"
    x:Name="Self"
    d:DataContext="{d:DesignInstance Type=viewmodels:NowPlayingViewModel}"
    Loaded="OnNowPlayingPageLoaded"
    mc:Ignorable="d">
    <Page.Resources>
        <Storyboard x:Name="EntranceStoryboard">
            <DoubleAnimation
                Storyboard.TargetName="BackdropGrid"
                Storyboard.TargetProperty="Opacity"
                To="1"
                Duration="0:0:0.2" />
        </Storyboard>

        <Storyboard x:Name="MusicListExpandStoryboard" Completed="OnMusicListExpandStoryboardCompleted">
            <DoubleAnimation
                Storyboard.TargetName="BackgroundImage"
                Storyboard.TargetProperty="Opacity"
                To="0.1"
                Duration="0:0:0.2" />

            <DoubleAnimation
                Storyboard.TargetName="ExpandOrFoldIndicatorFontIcon"
                Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                To="180"
                Duration="0:0:0.2" />

            <ObjectAnimationUsingKeyFrames
                Storyboard.TargetName="MusicInfoAndControlGrid"
                Storyboard.TargetProperty="VerticalAlignment"
                Duration="0:0:0.5">
                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Top" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames
                Storyboard.TargetName="MusicInfoAndControlGrid"
                Storyboard.TargetProperty="(Grid.Row)"
                Duration="0:0:0">
                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="0" />
            </ObjectAnimationUsingKeyFrames>

            <ObjectAnimationUsingKeyFrames
                Storyboard.TargetName="NowPlayingListView"
                Storyboard.TargetProperty="Visibility"
                Duration="0:0:0">
                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
            </ObjectAnimationUsingKeyFrames>
            <FadeInThemeAnimation Storyboard.TargetName="NowPlayingListView" />
        </Storyboard>

        <Storyboard x:Name="MusicListFoldStoryboard">
            <DoubleAnimation
                Storyboard.TargetName="BackgroundImage"
                Storyboard.TargetProperty="Opacity"
                To="0.3"
                Duration="0:0:0.2" />

            <DoubleAnimation
                Storyboard.TargetName="ExpandOrFoldIndicatorFontIcon"
                Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                To="0"
                Duration="0:0:0.2" />

            <ObjectAnimationUsingKeyFrames
                Storyboard.TargetName="MusicInfoAndControlGrid"
                Storyboard.TargetProperty="(Grid.Row)"
                Duration="0:0:0.5">
                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames
                Storyboard.TargetName="MusicInfoAndControlGrid"
                Storyboard.TargetProperty="VerticalAlignment"
                Duration="0">
                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Bottom" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames
                Storyboard.TargetName="NowPlayingListView"
                Storyboard.TargetProperty="Visibility"
                Duration="0">
                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Collapsed" />
            </ObjectAnimationUsingKeyFrames>
            <FadeOutThemeAnimation Storyboard.TargetName="NowPlayingListView" />
        </Storyboard>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <Image
            x:Name="BackgroundImage"
            Grid.RowSpan="2"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Opacity="0.3"
            Source="{x:Bind ViewModel.MusicInfo.CurrentMediaCover, Mode=OneWay}"
            Stretch="UniformToFill"
            Visibility="{x:Bind ViewModel.MusicInfo.ShowOrEnableMusicControl, Mode=OneWay}" />
        <Grid x:Name="BackdropGrid" Grid.RowSpan="2">
            <Grid.Background>
                <media:BackdropBlurBrush Amount="20" />
            </Grid.Background>
        </Grid>

        <StackPanel
            Grid.RowSpan="2"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Visibility="{x:Bind helpers:XamlHelper.ReverseVisibility(ViewModel.MusicInfo.HasMusic), Mode=OneWay}">
            <FontIcon
                Margin="0,0,0,5"
                FontSize="30"
                Glyph="&#xEC4F;" />
            <TextBlock x:Uid="NoMusicTextBlock" FontSize="20" />
        </StackPanel>

        <Grid
            x:Name="MusicInfoAndControlGrid"
            Grid.Row="1"
            Margin="11,40,11,0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Bottom"
            Visibility="{x:Bind ViewModel.MusicInfo.HasMusic, Mode=OneWay}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.Transitions>
                <TransitionCollection>
                    <RepositionThemeTransition />
                </TransitionCollection>
            </Grid.Transitions>

            <Grid Grid.Row="0" Margin="0,0,0,20">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Image
                    Grid.Column="0"
                    Width="130"
                    Height="130"
                    Margin="0,0,10,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Source="{x:Bind ViewModel.MusicInfo.CurrentMediaCover, Mode=OneWay}"
                    Visibility="{x:Bind ViewModel.MusicInfo.ShowOrEnableMusicControl, Mode=OneWay}" />
                <StackPanel
                    Grid.Column="1"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center">
                    <TextBlock
                        Grid.Row="0"
                        FontSize="20"
                        FontWeight="Bold"
                        Text="{x:Bind ViewModel.MusicInfo.CurrentMusicProperties.Title, Mode=OneWay}"
                        TextTrimming="CharacterEllipsis" />
                    <TextBlock
                        Grid.Row="1"
                        Margin="0,0,0,5"
                        FontSize="16"
                        FontWeight="Medium"
                        TextTrimming="CharacterEllipsis">
                        <Run Text="{x:Bind ViewModel.MusicInfo.CurrentMusicProperties.AlbumArtist, Mode=OneWay}" />
                        <Run Text="·" />
                        <Run Text="{x:Bind ViewModel.MusicInfo.CurrentMusicProperties.AlbumTitle, Mode=OneWay}" />
                    </TextBlock>
                </StackPanel>
            </Grid>

            <Grid Grid.Row="1" Margin="0,0,0,10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid x:Name="MusicProcessContainer" Grid.Row="0">
                    <Grid
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        Visibility="{x:Bind helpers:XamlHelper.ReverseVisibility(ViewModel.MusicInfo.IsMusicBufferingOrOpening), Mode=OneWay}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <TextBlock
                            Grid.Column="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="12"
                            Text="{x:Bind ViewModel.MusicInfo.MusicPosition, Converter={StaticResource TimeSpanToStringConverter}, Mode=OneWay}"
                            Visibility="{x:Bind ViewModel.MusicInfo.ShowOrEnableMusicControl, Mode=OneWay}" />
                        <Slider
                            x:Name="MusicProcessSlider"
                            Grid.Column="1"
                            Margin="5,0,5,0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center"
                            Foreground="{x:Bind helpers:XamlHelper.ToSolidColorBrush(ViewModel.MusicInfo.MusicThemeColorLight1), Mode=OneWay}"
                            IsEnabled="{x:Bind ViewModel.MusicInfo.ShowOrEnableMusicControl, Mode=OneWay}"
                            IsThumbToolTipEnabled="False"
                            Maximum="{x:Bind ViewModel.MusicInfo.MusicDuration.TotalSeconds, Mode=OneWay}"
                            Style="{StaticResource ThemedSlider}"
                            ValueChanged="OnPositionSliderValueChanged"
                            Value="{x:Bind ViewModel.MusicInfo.MusicPosition.TotalSeconds, Mode=OneWay}" />
                        <TextBlock
                            Grid.Column="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="12"
                            Text="{x:Bind ViewModel.MusicInfo.MusicDuration, Converter={StaticResource TimeSpanToStringConverter}, Mode=OneWay}"
                            Visibility="{x:Bind ViewModel.MusicInfo.ShowOrEnableMusicControl, Mode=OneWay}" />
                    </Grid>
                    <muxc:ProgressBar
                        x:Name="MusicStatusProgressBar"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        Foreground="{x:Bind helpers:XamlHelper.ToSolidColorBrush(ViewModel.MusicInfo.MusicThemeColorLight1), Mode=OneWay}"
                        IsIndeterminate="True"
                        Visibility="{x:Bind helpers:XamlHelper.ToVisibility(ViewModel.MusicInfo.IsMusicBufferingOrOpening), Mode=OneWay}" />
                </Grid>
                <Grid Grid.Row="1" Margin="0,10,0,0">
                    <StackPanel
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        Orientation="Horizontal">
                        <StackPanel.Resources>
                            <Style BasedOn="{StaticResource DefaultButtonStyle}" TargetType="Button">
                                <Setter Property="Height" Value="35" />
                                <Setter Property="Width" Value="35" />
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="Margin" Value="5,0,5,0" />
                                <Setter Property="Padding" Value="0" />
                            </Style>
                            <Style BasedOn="{StaticResource MediaControlToggleButton}" TargetType="msrControls:ThemedToggleButton">
                                <Setter Property="Height" Value="35" />
                                <Setter Property="Width" Value="35" />
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="Margin" Value="5,0,5,0" />
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="ThemeBackground">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{Binding ElementName=Self, Path=ViewModel.MusicInfo.MusicThemeColorLight1, Mode=OneWay}" />
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </StackPanel.Resources>

                        <Button
                            Margin="0,0,5,0"
                            AccessKey="P"
                            Command="{x:Bind ViewModel.MusicInfo.PreviousMusicCommand}"
                            IsEnabled="{x:Bind ViewModel.MusicInfo.ShowOrEnableMusicControl, Mode=OneWay}">
                            <FontIcon Glyph="&#xE100;" />
                        </Button>
                        <Button
                            AccessKey="S"
                            Command="{x:Bind ViewModel.MusicInfo.PlayOrPauseMusicCommand}"
                            IsEnabled="{x:Bind ViewModel.MusicInfo.ShowOrEnableMusicControl, Mode=OneWay}">
                            <FontIcon
                                FontFamily="Segoe MDL2 Assets"
                                FontSize="25"
                                Glyph="{x:Bind ViewModel.MusicInfo.PlayIconGlyph, Mode=OneWay}" />
                            <Win16299:Button.KeyboardAccelerators>
                                <Win16299:KeyboardAccelerator Key="Space" Modifiers="None" />
                                <Win16299:KeyboardAccelerator Key="P" Modifiers="Control" />
                            </Win16299:Button.KeyboardAccelerators>
                        </Button>
                        <Button
                            AccessKey="X"
                            Command="{x:Bind ViewModel.MusicInfo.NextMusicCommand}"
                            IsEnabled="{x:Bind ViewModel.MusicInfo.ShowOrEnableMusicControl, Mode=OneWay}">
                            <FontIcon Glyph="&#xE101;" />
                        </Button>
                        <msrControls:ThemedToggleButton
                            x:Name="IsShuffleToggleButton"
                            AccessKey="SF"
                            IsChecked="{x:Bind ViewModel.MusicInfo.IsShuffle, Mode=TwoWay}"
                            IsThreeState="False"
                            ToolTipService.ToolTip="{x:Bind ViewModel.MusicInfo.ShuffleStateDescription, Mode=OneWay}">
                            <FontIcon Glyph="&#xE14B;" />
                        </msrControls:ThemedToggleButton>
                        <msrControls:ThemedToggleButton
                            x:Name="IsRepeatToggleButton"
                            AccessKey="RP"
                            IsChecked="{x:Bind ViewModel.MusicInfo.IsRepeat, Mode=TwoWay}"
                            IsThreeState="True"
                            ToolTipService.ToolTip="{x:Bind ViewModel.MusicInfo.RepeatStateDescription, Mode=OneWay}">
                            <FontIcon Glyph="{x:Bind ViewModel.MusicInfo.RepeatIconGlyph, Mode=OneWay}" />
                        </msrControls:ThemedToggleButton>
                        <Button AccessKey="V">
                            <FontIcon Glyph="{x:Bind ViewModel.MusicInfo.VolumeIconGlyph, Mode=OneWay}" />

                            <Button.Flyout>
                                <Flyout>
                                    <StackPanel Orientation="Horizontal">
                                        <msrControls:ThemedToggleButton
                                            Width="35"
                                            Height="35"
                                            Margin="0,0,5,0"
                                            Padding="0"
                                            HorizontalAlignment="Center"
                                            AccessKey="MU"
                                            Background="Transparent"
                                            IsChecked="{x:Bind ViewModel.MusicInfo.IsMute, Mode=TwoWay}"
                                            IsThreeState="False"
                                            Style="{StaticResource MediaControlToggleButton}">
                                            <msrControls:ThemedToggleButton.ThemeBackground>
                                                <SolidColorBrush Color="{x:Bind ViewModel.MusicInfo.MusicThemeColorLight1, Mode=OneWay}" />
                                            </msrControls:ThemedToggleButton.ThemeBackground>

                                            <FontIcon FontSize="16" Glyph="{x:Bind ViewModel.MusicInfo.VolumeIconGlyph, Mode=OneWay}" />
                                        </msrControls:ThemedToggleButton>
                                        <Slider
                                            Width="100"
                                            VerticalAlignment="Center"
                                            Foreground="{x:Bind helpers:XamlHelper.ToSolidColorBrush(ViewModel.MusicInfo.MusicThemeColorLight1), Mode=OneWay}"
                                            Maximum="100"
                                            PointerWheelChanged="OnVolumeSliderPointerWheelChanged"
                                            Style="{StaticResource ThemedSlider}"
                                            Value="{x:Bind ViewModel.MusicInfo.Volume, Mode=TwoWay}" />
                                    </StackPanel>
                                </Flyout>
                            </Button.Flyout>
                        </Button>
                        <Button
                            x:Name="MoreOperationButton"
                            x:FieldModifier="Internal"
                            AccessKey="MO"
                            Content="&#xE10C;"
                            FontFamily="Segoe MDL2 Assets"
                            FontSize="16">
                            <Button.Flyout>
                                <muxc:MenuBarItemFlyout>
                                    <MenuFlyoutItem
                                        x:Uid="EnterCompactMode"
                                        AccessKey="CP"
                                        Command="{x:Bind ViewModel.ToCompactNowPlayingPageCommand}"
                                        Visibility="{x:Bind helpers:XamlHelper.ReverseVisibility(helpers:EnvironmentHelper.IsWindowsMobile)}">
                                        <MenuFlyoutItem.Icon>
                                            <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE158;" />
                                        </MenuFlyoutItem.Icon>
                                    </MenuFlyoutItem>
                                    <MenuFlyoutItem
                                        x:Uid="EnterGlanceMode"
                                        AccessKey="GL"
                                        Command="{x:Bind ViewModel.ToGlanceViewPageCommand}">
                                        <MenuFlyoutItem.Icon>
                                            <FontIcon Glyph="&#xE052;" />
                                        </MenuFlyoutItem.Icon>
                                    </MenuFlyoutItem>
                                    <MenuFlyoutItem
                                        AccessKey="CA"
                                        Command="{x:Bind ViewModel.ShowCastToPickerCommand}"
                                        Text="{x:Bind ViewModel.MediaCastingButtonString, Mode=OneWay}">
                                        <MenuFlyoutItem.Icon>
                                            <FontIcon Glyph="&#xEC15;" />
                                        </MenuFlyoutItem.Icon>
                                    </MenuFlyoutItem>
                                    <MenuFlyoutItem
                                        x:Uid="StopCasting"
                                        AccessKey="DC"
                                        Command="{x:Bind ViewModel.StopCastingCommand}"
                                        Visibility="{x:Bind ViewModel.IsMediaCasting, Mode=OneWay}">
                                        <MenuFlyoutItem.Icon>
                                            <FontIcon Glyph="&#xEA14;" />
                                        </MenuFlyoutItem.Icon>
                                    </MenuFlyoutItem>
                                    <MenuFlyoutSeparator />
                                    <MenuFlyoutItem
                                        x:Uid="ClearPlaybackList"
                                        AccessKey="CL"
                                        Command="{x:Bind ViewModel.MusicInfo.StopMusicCommand}"
                                        Icon="Cancel"
                                        IsEnabled="{x:Bind ViewModel.MusicInfo.ShowOrEnableMusicControl, Mode=OneWay}" />
                                </muxc:MenuBarItemFlyout>
                            </Button.Flyout>
                        </Button>
                    </StackPanel>
                </Grid>
                <Button
                    Grid.Row="2"
                    Width="30"
                    Height="30"
                    Margin="0,10,0,0"
                    Padding="0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    AccessKey="L"
                    Background="Transparent"
                    BorderThickness="0"
                    Click="OnExpandOrFoldNowPlayingList">

                    <FontIcon
                        x:Name="ExpandOrFoldIndicatorFontIcon"
                        Glyph="&#xE010;"
                        RenderTransformOrigin="0.5, 0.5">
                        <FontIcon.RenderTransform>
                            <RotateTransform />
                        </FontIcon.RenderTransform>
                    </FontIcon>
                </Button>
            </Grid>
        </Grid>

        <ListView
            x:Name="NowPlayingListView"
            Grid.Row="1"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            x:FieldModifier="Internal"
            AllowDrop="True"
            CanReorderItems="True"
            ItemsSource="{x:Bind services:MusicService.CurrentMediaPlaybackList}">
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="playback:MediaPlaybackItem">
                    <controls:NowPlayingItemGrid
                        Name="NowPlayingItemGrid"
                        Padding="0,0,10,0"
                        Background="Transparent">
                        <controls:NowPlayingItemGrid.ContextFlyout>
                            <muxc:MenuBarItemFlyout>
                                <MenuFlyoutItem
                                    x:Uid="PlayCommandButton"
                                    Command="{Binding ElementName=Self, Path=ViewModel.MoveToIndexCommand}"
                                    CommandParameter="{x:Bind}"
                                    Icon="Play" />
                                <MenuFlyoutSeparator />
                                <MenuFlyoutItem
                                    x:Uid="RemoveCommandButton"
                                    Command="{Binding ElementName=Self, Path=ViewModel.RemoveAtCommand}"
                                    CommandParameter="{x:Bind}"
                                    Icon="Delete" />
                            </muxc:MenuBarItemFlyout>
                        </controls:NowPlayingItemGrid.ContextFlyout>

                        <!--  Commented for not fitting to narrow UI  -->
                        <controls:NowPlayingItemGrid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition MaxWidth="40" />
                        </controls:NowPlayingItemGrid.ColumnDefinitions>

                        <StackPanel
                            Grid.Column="0"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">
                            <PathIcon
                                Margin="0,0,10,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="F1 M 12.5 17.5 L 12.5 6.259766 L 13.740234 6.259766 L 13.740234 17.5 Z M 1.240234 17.5 L 1.240234 13.759766 L 2.5 13.759766 L 2.5 17.5 Z M 5 17.5 L 5 10 L 6.240234 10 L 6.240234 17.5 Z M 8.740234 17.5 L 8.740234 1.259766 L 10 1.259766 L 10 17.5 Z M 16.240234 10 L 17.5 10 L 17.5 17.5 L 16.240234 17.5 Z "
                                Foreground="{Binding ElementName=NowPlayingItemGrid, Path=ContentBrush, Mode=OneWay}"
                                Visibility="{Binding ElementName=NowPlayingItemGrid, Path=CurrentNowPlayingItemIndicatorVisibility, Mode=OneWay}" />

                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="{Binding ElementName=NowPlayingItemGrid, Path=ContentBrush, Mode=OneWay}"
                                Text="{x:Bind Converter={StaticResource MediaPlaybackItemToMusicRelatedPropertiesConverter}, ConverterParameter='MusicTitle'}"
                                TextTrimming="CharacterEllipsis" />
                        </StackPanel>

                        <TextBlock
                            Grid.Column="1"
                            VerticalAlignment="Center"
                            Foreground="{Binding ElementName=NowPlayingItemGrid, Path=ContentBrush, Mode=OneWay}"
                            Text="{x:Bind Converter={StaticResource MediaPlaybackItemToMusicRelatedPropertiesConverter}, ConverterParameter='MusicAlbum'}"
                            TextTrimming="CharacterEllipsis" />
                        <TextBlock
                            Grid.Column="2"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            DataContext="{x:Bind}"
                            Foreground="{Binding ElementName=NowPlayingItemGrid, Path=ContentBrush, Mode=OneWay}"
                            Loaded="OnSongDurationTextBlockLoaded" />
                    </controls:NowPlayingItemGrid>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.ItemContainerStyle>
                <Style BasedOn="{StaticResource Win11ListViewItemStyle}" TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="VerticalContentAlignment" Value="Stretch" />
                    <Setter Property="Padding" Value="15,0,0,0" />
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.Transitions>
                <TransitionCollection>
                    <EntranceThemeTransition />
                </TransitionCollection>
            </ListView.Transitions>
        </ListView>
    </Grid>
</Page>
